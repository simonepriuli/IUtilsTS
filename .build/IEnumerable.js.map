{
  "version": 3,
  "sources": ["../IEnumerable.ts"],
  "sourcesContent": ["export class IEnumerable {\n\n  Enumerables = new Map();\n  id: number = -1;\n\n  Append(obj: any) {\n    if (this.id == -1) {this.id = 0}\n    this.Enumerables.set(this.id, obj);\n    this.id += 1;\n  }\n\n  Any() {\n    if (this.id == -1) {return false}\n    else {return true}\n  }\n\n  GetEnumerator(): Map<any, any> {\n    return this.Enumerables;\n  }  \n\n  Lenght(): number {\n    let x: number = 0;\n    this.Enumerables.forEach(()=> {\n      x = x +1;\n    });\n    return x;\n  } \n\n  Average(): number {\n    let sampleValue: number = 0;\n    \n    let average: number = 0;\n    let aveCount: number = 0;\n    \n    this.Enumerables.forEach((value)=> {\n      if (typeof(value) == typeof(sampleValue)) {\n        average += value;\n        aveCount += 1;\n      }\n    })\n    if (aveCount != 0) {return average/aveCount}\n    else {return 0}\n  }\n  \n}\n"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAAO,kBAAkB;AAAA,EAEvB,cAAc,IAAI;AAAA,EAClB,KAAa;AAAA,EAEb,OAAO,KAAU;AACf,QAAI,KAAK,MAAM,IAAI;AAAC,WAAK,KAAK;AAAA;AAC9B,SAAK,YAAY,IAAI,KAAK,IAAI;AAC9B,SAAK,MAAM;AAAA;AAAA,EAGb,MAAM;AACJ,QAAI,KAAK,MAAM,IAAI;AAAC,aAAO;AAAA,WACtB;AAAC,aAAO;AAAA;AAAA;AAAA,EAGf,gBAA+B;AAC7B,WAAO,KAAK;AAAA;AAAA,EAGd,SAAiB;AACf,QAAI,IAAY;AAChB,SAAK,YAAY,QAAQ,MAAK;AAC5B,UAAI,IAAG;AAAA;AAET,WAAO;AAAA;AAAA,EAGT,UAAkB;AAChB,QAAI,cAAsB;AAE1B,QAAI,UAAkB;AACtB,QAAI,WAAmB;AAEvB,SAAK,YAAY,QAAQ,CAAC,UAAS;AACjC,UAAI,OAAO,SAAU,OAAO,aAAc;AACxC,mBAAW;AACX,oBAAY;AAAA;AAAA;AAGhB,QAAI,YAAY,GAAG;AAAC,aAAO,UAAQ;AAAA,WAC9B;AAAC,aAAO;AAAA;AAAA;AAAA;",
  "names": []
}
